// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SomtelTechnicalManagmentSystem_STM.Data;

namespace SomtelTechnicalManagmentSystem_STM.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230322081244_UpdatingOcsSupport3")]
    partial class UpdatingOcsSupport3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("SomtelTechnicalManagmentSystem_STM.Models.HWAlarmModel.Alarm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("AlarmDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AlarmType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Server")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServerAlarmID")
                        .HasColumnType("int");

                    b.Property<string>("System")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ServerAlarmID");

                    b.ToTable("Alarms");
                });

            modelBuilder.Entity("SomtelTechnicalManagmentSystem_STM.Models.HWAlarmModel.ServerAlarm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("AlarmDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit");

                    b.Property<string>("Server")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("SystemAlarmID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SystemAlarmID");

                    b.ToTable("ServerAlarms");
                });

            modelBuilder.Entity("SomtelTechnicalManagmentSystem_STM.Models.HWAlarmModel.SystemAlarm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("AlarmDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("System")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("SystemAlarms");
                });

            modelBuilder.Entity("SomtelTechnicalManagmentSystem_STM.Models.LoginModel.Login", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Activate")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OTP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reset")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("SomtelTechnicalManagmentSystem_STM.Models.LoginModel.Privilege", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit");

                    b.Property<int>("LoginId")
                        .HasColumnType("int");

                    b.Property<int>("PrivilegeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LoginId");

                    b.HasIndex("PrivilegeId");

                    b.ToTable("Privileges");
                });

            modelBuilder.Entity("SomtelTechnicalManagmentSystem_STM.Models.LoginModel.PrivilegeName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PrivilegeNames");
                });

            modelBuilder.Entity("SomtelTechnicalManagmentSystem_STM.Models.LoginModel.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit");

                    b.Property<string>("TeamName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("SomtelTechnicalManagmentSystem_STM.Models.NavBarModel.NavbarParent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit");

                    b.Property<string>("ParentAspAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentAspControl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentNavbarName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NavbarParent");
                });

            modelBuilder.Entity("SomtelTechnicalManagmentSystem_STM.Models.OCSSupportModel.OcsApiLog", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ApiFunction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApiRequest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApiResponse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExchangeNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("OcsApiLogs");
                });

            modelBuilder.Entity("SomtelTechnicalManagmentSystem_STM.Models.OCSSupportModel.OcsExceptions", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExceptionFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExchangeNo")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("OcsExceptions");
                });

            modelBuilder.Entity("SomtelTechnicalManagmentSystem_STM.Models.OCSSupportModel.OcsService", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Channel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("DurationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FreeUnitId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FreeUnitName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FreeUnitVolume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("ServiceID")
                        .HasColumnType("int");

                    b.Property<string>("ServiceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("OcsServices");
                });

            modelBuilder.Entity("SomtelTechnicalManagmentSystem_STM.Models.TaskModel.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MembersAssigned")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("TaskEquibment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaskTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.Property<int>("TeamMemberId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.HasIndex("TaskTypeId");

                    b.HasIndex("TeamId");

                    b.HasIndex("TeamMemberId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("SomtelTechnicalManagmentSystem_STM.Models.TaskModel.TaskStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit");

                    b.Property<string>("StatusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Style")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("TaskStatus");
                });

            modelBuilder.Entity("SomtelTechnicalManagmentSystem_STM.Models.TaskModel.TaskType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("TaskTypes");
                });

            modelBuilder.Entity("SomtelTechnicalManagmentSystem_STM.Models.TaskModel.TaskUpdate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.ToTable("TaskUpdates");
                });

            modelBuilder.Entity("SomtelTechnicalManagmentSystem_STM.Models.TaskModel.TeamEquibment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteFlag")
                        .HasColumnType("int");

                    b.Property<string>("EquibmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("TeamEquibment");
                });

            modelBuilder.Entity("SomtelTechnicalManagmentSystem_STM.Models.TaskModel.TeamMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("TeamId");

                    b.ToTable("TeamMembers");
                });

            modelBuilder.Entity("SomtelTechnicalManagmentSystem_STM.Models.HWAlarmModel.Alarm", b =>
                {
                    b.HasOne("SomtelTechnicalManagmentSystem_STM.Models.HWAlarmModel.ServerAlarm", "ServerAlarm")
                        .WithMany()
                        .HasForeignKey("ServerAlarmID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServerAlarm");
                });

            modelBuilder.Entity("SomtelTechnicalManagmentSystem_STM.Models.HWAlarmModel.ServerAlarm", b =>
                {
                    b.HasOne("SomtelTechnicalManagmentSystem_STM.Models.HWAlarmModel.SystemAlarm", "SystemAlarm")
                        .WithMany()
                        .HasForeignKey("SystemAlarmID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SystemAlarm");
                });

            modelBuilder.Entity("SomtelTechnicalManagmentSystem_STM.Models.HWAlarmModel.SystemAlarm", b =>
                {
                    b.HasOne("SomtelTechnicalManagmentSystem_STM.Models.LoginModel.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("SomtelTechnicalManagmentSystem_STM.Models.LoginModel.Login", b =>
                {
                    b.HasOne("SomtelTechnicalManagmentSystem_STM.Models.LoginModel.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("SomtelTechnicalManagmentSystem_STM.Models.LoginModel.Privilege", b =>
                {
                    b.HasOne("SomtelTechnicalManagmentSystem_STM.Models.LoginModel.Login", "Login")
                        .WithMany()
                        .HasForeignKey("LoginId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SomtelTechnicalManagmentSystem_STM.Models.LoginModel.PrivilegeName", "PrivilegeName")
                        .WithMany()
                        .HasForeignKey("PrivilegeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Login");

                    b.Navigation("PrivilegeName");
                });

            modelBuilder.Entity("SomtelTechnicalManagmentSystem_STM.Models.TaskModel.Task", b =>
                {
                    b.HasOne("SomtelTechnicalManagmentSystem_STM.Models.TaskModel.TaskStatus", "TaskStatus")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SomtelTechnicalManagmentSystem_STM.Models.TaskModel.TaskType", "TaskType")
                        .WithMany()
                        .HasForeignKey("TaskTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SomtelTechnicalManagmentSystem_STM.Models.LoginModel.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId");

                    b.HasOne("SomtelTechnicalManagmentSystem_STM.Models.TaskModel.TeamMember", "TeamMember")
                        .WithMany()
                        .HasForeignKey("TeamMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaskStatus");

                    b.Navigation("TaskType");

                    b.Navigation("Team");

                    b.Navigation("TeamMember");
                });

            modelBuilder.Entity("SomtelTechnicalManagmentSystem_STM.Models.TaskModel.TaskStatus", b =>
                {
                    b.HasOne("SomtelTechnicalManagmentSystem_STM.Models.LoginModel.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("SomtelTechnicalManagmentSystem_STM.Models.TaskModel.TaskType", b =>
                {
                    b.HasOne("SomtelTechnicalManagmentSystem_STM.Models.LoginModel.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("SomtelTechnicalManagmentSystem_STM.Models.TaskModel.TaskUpdate", b =>
                {
                    b.HasOne("SomtelTechnicalManagmentSystem_STM.Models.TaskModel.Task", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Task");
                });

            modelBuilder.Entity("SomtelTechnicalManagmentSystem_STM.Models.TaskModel.TeamEquibment", b =>
                {
                    b.HasOne("SomtelTechnicalManagmentSystem_STM.Models.LoginModel.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("SomtelTechnicalManagmentSystem_STM.Models.TaskModel.TeamMember", b =>
                {
                    b.HasOne("SomtelTechnicalManagmentSystem_STM.Models.LoginModel.Login", "Login")
                        .WithMany()
                        .HasForeignKey("MemberId");

                    b.HasOne("SomtelTechnicalManagmentSystem_STM.Models.LoginModel.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId");

                    b.Navigation("Login");

                    b.Navigation("Team");
                });
#pragma warning restore 612, 618
        }
    }
}
